global: 
  file_watch_config:
    - min_poll_frequency: 250ms
    - max_poll_frequency: 250ms

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml
  sync_period: 10s

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  - job_name: tail
    static_configs:
      - targets:
          - localhost
        labels:
          job: tail              
          app: app_intellionext.*                 
          __path__: /var/log/containers/*intellionext*nginx*.log
    pipeline_stages:
      - match: '{name="intellionext"}'
        selector: "{app=\"app_intellionext.*\"}"
        stages:
        - regex:
            expression: '^(?<timestamp>[^ ]*) stdout F (?<remote>[^ ]\d{1,3}\.\d{1,3})\.\d{1,3}\.\d{1,3} (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)?(?:\?+\S*)?(?: +\S*)?)" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)"(?:\s+(?<request_time_float>[^ ]+))?)?$'  
        - labels:
            level:
            component:
        - timestamp:
            format: RFC822
            source: time

  - job_name: tail
    static_configs:
      - targets:
          - localhost
        labels:
          job: tail              
          app: app_ifr.*                 
          __path__: /var/log/containers/*ifr*nginx*.log
    pipeline_stages:
      - match: '{name="ifr"}'
        selector: "{app=\"app_ifr.*\"}"
        stages:
        - regex:
            expression: '^(?<timestamp>[^ ]*) stdout F (?<remote>[^ ]\d{1,3}\.\d{1,3})\.\d{1,3}\.\d{1,3} (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)?(?:\?+\S*)?(?: +\S*)?)" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)"(?:\s+(?<request_time_float>[^ ]+))?)?$'  
        - labels:
            level:
            component:
        - timestamp:
            format: RFC822
            source: time

  - job_name: tail
    static_configs:
      - targets:
          - localhost
        labels:
          job: tail              
          app: app_webadmin.*                 
          __path__: /var/log/containers/*webadmin*nginx*.log
    pipeline_stages:
      - match: '{name="webadmin"}'
        selector: "{app=\"app_webadmin.*\"}"
        stages:
        - regex:
            expression: '^(?<timestamp>[^ ]*) stdout F (?<remote>[^ ]\d{1,3}\.\d{1,3})\.\d{1,3}\.\d{1,3} (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)?(?:\?+\S*)?(?: +\S*)?)" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)"(?:\s+(?<request_time_float>[^ ]+))?)?$'  
        - labels:
            level:
            component:
        - timestamp:
            format: RFC822
            source: time

  - job_name: tail
    static_configs:
      - targets:
          - localhost
        labels:
          job: tail              
          app: mail.*                
          __path__: /var/log/containers/*postfix*postfix*.log
    pipeline_stages:
      - match: '{name="mail"}'
        selector: "{app=\"mail.*\"}"
        stages:
        - regex:
            expression: '^(?<timestamp>[^ ]*) (?<output_type>[^ ]*) F (?<time>\b\w{3} \d{2} \b\d{2}:\d{2}:\d{2}\b) (?<host>[^ ]+) (?<process>[^:]+): (?<key>[^:]+): from=<(?<address_from>[^>]+)>, size=(?<size>[^,]+), nrcpt=(?<nrcpt>[^ ]+) \((?<queue>[^\)]+)\)$'  
        - labels:
            level:
            component:
        - timestamp:
            format: RFC3164
            source: time

  - job_name: tail
    static_configs:
      - targets:
          - localhost
        labels:
          job: tail              
          app: migration.*                
          __path__: /var/log/containers/*workerstd1*migration*.log
    pipeline_stages:
      - match: '{name="migration"}'
        selector: "{app=\"migration.*\"}"
        stages:
        - regex:
            expression: '^(?<timestamp>[^ ]*) (?<output_type>[^ ]*) F (?<output>.*)$'  
        - labels:
            level:
            component:
        - timestamp:
            format: RFC822
            source: time
        
      

docker: {}
